# -*-yaml-*-

name: slim-base
description: '{{model_label}} classifier for TF-Slim'
private: yes

operations:
  train:
    description: Train {{model_label}}
    cmd: >
      slim_op train_image_classifier \
        --model_name {{model_name}} \
        --train_dir . \
        --dataset_split_name train \
        --dataset_dir data
    flags: !load train-flags
    requires:
      - slim/lib
      - ${dataset}-dataset

  fine-tune:
    description: Fine-tune {{model_label}}
    cmd: >
      slim_op train_image_classifier \
        --model_name {{model_name}} \
        --train_dir . \
        --dataset_split_name train \
        --dataset_dir data \
        --checkpoint_path {{model_name}}.ckpt \
        --checkpoint_exclude_scopes {{model_name}}/logits \
        --trainable_scopes {{model_name}}/logits
    flags: !load train-flags
    requires:
      - slim/lib
      - ${dataset}-dataset
      - checkpoint

  evaluate:
    description: Evaluate a trained {{model_label}} model
    cmd: >
      slim_op eval_image_classifier \
        --model_name {{model_name}} \
        --eval_dir . \
        --dataset_split_name validation \
        --dataset_dir data \
        --checkpoint_path model
    flags:
      dataset: !load dataset-flag
      max-batches:
        description: Maximum number of batches to evaluate (default is all)
        arg-name: max_num_batches

    requires:
      - slim/lib
      - ${dataset}-dataset
      - trained-model

  export:
    description: Generate a {{model_label}} graph def
    cmd: >
      slim_op export_inference_graph \
        --model_name {{model_name}} \
        --output_file graph.pb
    flags:
      dataset: !load dataset-flag
    requires:
      - slim/lib

  freeze:
    description: Generate a {{model_label}} graph def with checkpoint weights
    cmd: >
      slim_op tensorflow/python/tools/freeze_graph \
        --input_graph export/graph.pb \
        --input_checkpoint model/model.ckpt \
        --input_binary true \
        --output_graph graph.pb \
        --output_node_names {{model_name}}/predictions/Reshape_1
    requires:
      - slim/lib
      - trained-model
      - export

  predict:
    description: Use TensorFlow label_image and {{label_image}} to classify an image
    cmd: >
      label_image \
        --graph graph.pb \
        --labels data/labels.txt \
        --output-layer {{model_name}}/predictions/Reshape_1
    flags:
      label-image-bin:
        description: Path to the TensorFlow label_image program
        default: label_image
      image:
        description: Path to the input image
        required: yes
      image-mean:
        description: Image mean to apply to the image
        default: 0.0
      image-std:
        description: Image std deviation to apply to the image
        default: 1.0
      dataset:
        description: Dataset name to use for labels and image transformation
        required: yes
        arg-skip: yes
        options:
          - value: cifar10
          - value: minst
          - value: flowers
          - value: imagenet
            args:
              image-mean: 0.0
              image-std: 255
          - value: custom
    requires:
      - ${dataset}-dataset
      - frozen-model

resources:
  cifar10-dataset:
    sources:
      - operation: slim-cifar10:prepare
        select: data

  mnist-dataset:
    sources:
      - operation: slim-mnist:prepare
        select: data

  flowers-dataset:
    sources:
      - operation: slim-flowers:prepare
        select: data

  custom-dataset:
    sources:
      - operation: slim-custom-images:prepare
        select: data

  trained-model:
    description: Trained {{model_label}} model (train or fine-tune operation)
    path: model
    sources:
      - operation: train,fine-tune
        select: checkpoint|model\.ckpt.*

  export:
    description: Exported {{model_label}} graph def from export operation
    path: export
    sources:
      - operation: export
        select: graph.pb

  frozen-model:
    description: Frozen {{model_label}} graph with weights
    sources:
      - operation: freeze
        select: graph.pb
