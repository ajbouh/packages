- name: slim-resnet
  description: ResNet classifier in TF-Slim
  operations:
    train:
      description: Train ResNet
      cmd: >
        slim_op train_image_classifier \
          --model_name resnet_v1_${layers} \
          --train_dir . \
          --dataset_split_name train \
          --dataset_dir data
      flags:
        $include: [resnet-flags, train-flags]
      requires:
        - slim/lib
        - datasets:${dataset}
    fine-tune:
      description: Fine-tune ResNet
      cmd: >
        slim_op train_image_classifier \
          --model_name resnet_v1_${layers} \
          --train_dir . \
          --dataset_split_name train \
          --dataset_dir data \
          --checkpoint_path resnet_v1_${layers}.ckpt \
          --checkpoint_exclude_scopes resnet_v1_${layers}/logits \
          --trainable_scopes resnet_v1_${layers}/logits
      flags:
        $include: [resnet-flags, train-flags]
      requires:
        - slim/lib
        - datasets:${dataset}
        - checkpoints:resnet-${layers}
    evaluate:
      description: Evaluate a trained ResNet model
      cmd: >
        slim_op eval_image_classifier \
          --model_name resnet_v1_${layers} \
          --eval_dir . \
          --dataset_split_name validation \
          --dataset_dir data \
          --checkpoint_path model
      flags:
        $include: [resnet-flags, eval-flags]
      requires:
        - slim/lib
        - datasets:${dataset}
        - model
    export:
      description: Generate a ResNet graph def
      cmd: >
        slim_op export_inference_graph \
          --model_name resnet_v1_${layers} \
          --output_file graph.pb
      flags:
        $include: [resnet-flags, export-flags]
      requires:
        - slim/lib
    freeze:
      description: Generate a ResNet graph def with checkpoint weights
      cmd: >
        slim_op tensorflow/python/tools/freeze_graph \
          --input_graph export/graph.pb \
          --input_checkpoint model/model.ckpt \
          --input_binary true \
          --output_graph graph.pb \
          --output_node_names resnet_v1_${layers}/predictions/Reshape_1
      flags:
        $include: resnet-flags
      requires:
        - slim/lib
        - trained-model
        - export
  resources:
    trained-model:
      description: Trained ResNet model from train or fine-tune operation
      path: model
      sources:
        - operation: train,fine-tune
          select: checkpoint|model\.ckpt.*
    export:
      description: Exported ResNet graph def from export operation
      path: export
      sources:
        - operation: export
          select: graph.pb

- name: resnet-flags
  private: yes
  flags:
    layers:
      description: Number of ResNet layers (50, 101, 152, 200)
      value: 50
      arg-skip: yes
      options:
        - value: 50
          description: ResNet-50
        - value: 101
          description: ResNet-101
        - value: 152
          description: ResNet-152
        - value: 200
          description: ResNet-200

- !load train-flags
- !load eval-flags
- !load export-flags
- !load dataset-resources
- !load checkpoint-resources
