- package: slim.examples
  version: 0.0.2
  description: TF-Slim examples
  url: https://github.com/guildai/index/tree/master/slim/examples
  author: Guild AI
  author-email: packages@guild.ai
  license: Apache 2.0
  tags: [slim]

- config: slim-models-support
  resources:
    slim-models:
      sources:
        - url: https://github.com/tensorflow/models/archive/2aec950cf5670a86eb0681e3a0348570c4a4638c.zip
          sha256: cc97bed49476a1984325561dcb29f88a26910689050d9112d02e371209455997
          select: models-2aec950cf5670a86eb0681e3a0348570c4a4638c/research/slim

- config: slim-example
  description: Base config for TF-Slim examples
  extends:
    - slim-models-support
  params:
    dataset-name: CHANGE_ME
    labels-path: CHANGE_ME
    model-name: CHANGE_ME
    image-size: CHANGE_ME
    transfer-learn-checkpoint: CHANGE_ME
    transfer-learn-train-layer: CHANGE_ME
    input-layer: CHANGE_ME
    output-layer: CHANGE_ME
  operations:
    train:
      description: Train model from scratch
      main:
        slim/train_image_classifier
          --dataset_dir data
          --dataset_name {{dataset-name}}
          --train_dir train
          --model_name {{model-name}}
          --train_image_size {{image-size}}
      requires:
        - slim-models
        - prepared-data
    transfer-learn:
      description: Train model using transfer learning
      main:
        slim/train_image_classifier
          --dataset_dir data
          --dataset_name {{dataset-name}}
          --train_dir train
          --model_name {{model-name}}
          --train_image_size {{image-size}}
          --checkpoint_path {{transfer-learn-checkpoint-path}}
          --checkpoint_exclude_scopes {{transfer-learn-train-layer}}
          --trainable_scopes {{transfer-learn-train-layer}}
      requires:
        - slim-models
        - prepared-data
        - transfer-learn-checkpoint
    finetune:
      description: Finetune a trained model
      main:
        slim/train_image_classifier
          --dataset_dir data
          --dataset_name {{dataset-name}}
          --train_dir train
          --model_name {{model-name}}
          --train_image_size {{image-size}}
          --checkpoint_path model
          --optimizer sgd
          --learning_rate ${learning-rate}
      requires:
        - slim-models
        - prepared-data
        - trained-model
      flags:
        learning-rate:
          description: Initial learning rate
          default: 0.001
    evaluate:
      description: Evaluate a trained model
      main:
        slim/eval_image_classifier
          --alsologtostderr
          --checkpoint_path model
          --dataset_dir data
          --dataset_name {{dataset-name}}
          --dataset_split_name validation
          --model_name {{model-name}}
          --eval_image_size {{image-size}}
          --eval_dir .
      requires:
        - slim-models
        - prepared-data
        - trained-model
    export:
      description: Export an inference graph architecture
      main:
        slim/export_inference_graph
          --alsologtostderr
          --model_name {{model-name}}
          --image_size {{image-size}}
          --dataset_name {{dataset-name}}
          --output_file graph.pb
      requires:
        - slim-models
    freeze:
      description: Generate an inference graph containing trained model weights
      main:
        tensorflow/python/tools/freeze_graph
          --input_graph graph.pb
          --input_binary
          --input_checkpoint model/model.ckpt-${checkpoint-step}
          --output_node_names {{output-layer}}
          --output_graph frozen_graph.pb
      requires:
        - exported-graph
        - trained-model
      flags:
        checkpoint-step:
          description: Checkpoint step used for freeze variables
          required: yes
    tflite:
      description: Generate a TFLite file from a frozen graph
      main:
        tensorflow/contrib/lite/python/tflite_convert
          --graph_def_file frozen_graph.pb
          --output_file model.tflite
          --input_arrays {{input-layer}}
          --output_arrays {{output-layer}}
      requires:
        - frozen-graph
    label:
      description: Classify an image using a trained model
      main:
        label_image
          --graph frozen_graph.pb
          --image ${image}
          --input_width {{image-size}}
          --input_height {{image-size}}
          --input_layer {{input-layer}}
          --output_layer {{output-layer}}
          --labels {{labels-path}}
      requires:
        - label-image
        - frozen-graph
        - labels
      flags:
        image:
          description: Path to image to classify
          required: yes
  resources:
    trained-model:
      description: Trained model from train, transfer-learn, or finetune
      path: model
      sources:
        - operation: train,transfer-learn,finetune
          select: train/*.*
    exported-graph:
      description: Exported inference graph
      sources:
        - operation: export
          select: graph\.pb
    frozen-graph:
      description: Frozen inference graph
      sources:
        - operation: freeze
          select: frozen_graph\.pb
    label-image:
      sources:
        - url: https://raw.githubusercontent.com/tensorflow/tensorflow/b9018073ec1afc7dfc302ab171db8bf5b177c2dd/tensorflow/examples/label_image/label_image.py
          sha256: 58ce0de9fe2d0a75dc3c59d10a1d4e2fd6aa4b8b2192ff4499593542f4847eb8

- model: flowers-dataset
  description: TensorFlow flowers dataset
  extends:
    - slim-models-support
  operations:
    prepare:
      description: Prepare dataset for training
      main:
        slim/download_and_convert_data
          --dataset_name flowers
          --dataset_dir data
      requires:
        - slim-models

- config: flowers-model
  params:
    dataset-name: flowers
    labels-path: labels.txt
  resources:
    prepared-data:
      sources:
        - operation: flowers-dataset:prepare
          select: data
    labels:
      sources:
        - operation: flowers-dataset:prepare
          select: data/labels.txt

- config: mobilenet-v1
  params:
    model-name: mobilenet_v1
    image-size: 224
    transfer-learn-checkpoint-path: checkpoint/mobilenet_v1_1.0_224.ckpt
    transfer-learn-train-layer: MobilenetV1/Logits
    input-layer: input
    output-layer: MobilenetV1/Predictions/Reshape_1
  resources:
    transfer-learn-checkpoint:
      path: checkpoint
      sources:
        - url: http://download.tensorflow.org/models/mobilenet_v1_2018_02_22/mobilenet_v1_1.0_224.tgz
          sha256: 1ccb74dbd9c5f7aea879120614e91617db9534bdfaa53dfea54b7c14162e126b

- config: mobilenet-v2-1.4-224
  params:
    model-name: mobilenet_v2_140
    image-size: 224
    transfer-learn-checkpoint-path: checkpoint/mobilenet_v2_1.4_224.ckpt
    transfer-learn-train-layer: MobilenetV2/Logits
    input-layer: input
    output-layer: MobilenetV2/Predictions/Reshape_1
  resources:
    transfer-learn-checkpoint:
      path: checkpoint
      sources:
        - url: https://storage.googleapis.com/mobilenet_v2/checkpoints/mobilenet_v2_1.4_224.tgz
          sha256: a20d0c8d698502dc6a620528871c97a588885df7737556243a3412b39fce85e0

- model: flowers-mobilenet-v1
  description: Flowers classifier using MobileNet v1
  extends:
    - flowers-model
    - mobilenet-v1
    - slim-example
  params:
    dataset-name: flowers

- model: flowers-mobilenet-v2
  description: Flowers classifier using MobileNet v2
  extends:
    - flowers-model
    - mobilenet-v2-1.4-224
    - slim-example
  params:
    dataset-name: flowers
